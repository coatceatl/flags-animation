{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["flags","id","position","x","y","size","value","alt","delay","App","className","map","flag","key","src","style","top","left","width","height","animationDelay","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.39bf54fb.chunk.js","sourcesContent":["import React\n  //  { useState } \n  from 'react';\n\nconst flags = [\n  {\n    id: 1,\n    position: { x: 1362.5, y: 7.5 },\n    size: 0.5,\n    value: 'img/se.png',\n    alt: 'se',\n    delay: -115322\n  },\n  {\n    id: 2,\n    position: { x: 1362.5, y: 334.5 },\n    size: 0.5,\n    value: 'img/us.png',\n    alt: 'us',\n    delay: -179085\n  },\n  {\n    id: 3,\n    position: { x: 1362.5, y: 41.5 },\n    size: 0.5,\n    value: 'img/br.png',\n    alt: 'br',\n    delay: -254136\n  },\n  {\n    id: 4,\n    position: { x: 1362.5, y: 296.5 },\n    size: 0.5,\n    value: 'img/kr.png',\n    alt: 'kr',\n    delay: -274983\n  },\n  {\n    id: 5,\n    position: { x: 1362.5, y: 318.5 },\n    size: 0.5,\n    value: 'img/hk.png',\n    alt: 'hk',\n    delay: -230949\n  },\n  {\n    id: 6,\n    position: { x: 1362.5, y: 188.5 },\n    size: 0.5,\n    value: 'img/es.png',\n    alt: 'au',\n    delay: -80847\n  },\n  {\n    id: 7,\n    position: { x: 1355, y: 320 },\n    size: 0.6,\n    value: 'img/hk.png',\n    alt: 'se',\n    delay: -123051\n  },\n  {\n    id: 8,\n    position: { x: 1355, y: 148 },\n    size: 0.6,\n    value: 'img/fr.png',\n    alt: 'fr',\n    delay: -45153\n  },\n  {\n    id: 9,\n    position: { x: 1355, y: 342 },\n    size: 0.6,\n    value: 'img/cy.png',\n    alt: 'uk',\n    delay: -258814\n  },\n  {\n    id: 10,\n    position: { x: 1355, y: 148 },\n    size: 0.6,\n    value: 'img/ca.png',\n    alt: 'ca',\n    delay: -132508\n  },\n  {\n    id: 11,\n    position: { x: 1355, y: 43 },\n    size: 0.6,\n    value: 'img/jp.png',\n    alt: 'jp',\n    delay: -92237\n  },\n  {\n    id: 12,\n    position: { x: 1355, y: 275 },\n    size: 0.6,\n    value: 'img/lv.png',\n    alt: 'in',\n    delay: -64373\n  },\n  {\n    id: 13,\n    position: { x: 1340, y: 0 },\n    size: 0.8,\n    value: 'img/sg.png',\n    alt: 'sg',\n    delay: -32847\n  },\n  {\n    id: 14,\n    position: { x: 1340, y: 282 },\n    size: 0.8,\n    value: 'img/au.png',\n    alt: 'au',\n    delay: -146441\n  },\n  {\n    id: 15,\n    position: { x: 1340, y: 233 },\n    size: 0.8,\n    value: 'img/fr.png',\n    alt: 'fr',\n    delay: -196169\n  },\n  {\n    id: 16,\n    position: { x: 1340, y: 138 },\n    size: 0.8,\n    value: 'img/uk.png',\n    alt: 'uk',\n    delay: -217119\n  },\n  {\n    id: 17,\n    position: { x: 1340, y: 22 },\n    size: 0.8,\n    value: 'img/ie.png',\n    alt: 'ie',\n    delay: -231458\n  },\n  {\n    id: 18,\n    position: { x: 1340, y: 122 },\n    size: 0.8,\n    value: 'img/jp.png',\n    alt: 'jp',\n    delay: -269898\n  },\n  {\n    id: 19,\n    position: { x: 1340, y: 0 },\n    size: 0.8,\n    value: 'img/il.png',\n    alt: 'au',\n    delay: -283017\n  },\n  {\n    id: 20,\n    position: { x: 1340, y: 58 },\n    size: 0.8,\n    value: 'img/in.png',\n    alt: 'in',\n    delay: -154475\n  },\n  {\n    id: 21,\n    position: { x: 1340, y: 173 },\n    size: 0.8,\n    value: 'img/sg.png',\n    alt: 'sg',\n    delay: -108915\n  },\n  {\n    id: 22,\n    position: { x: 1340, y: 88 },\n    size: 0.8,\n    value: 'img/de.png',\n    alt: 'au',\n    delay: -180305\n  },\n  {\n    id: 23,\n    position: { x: 1340, y: 325 },\n    size: 0.8,\n    value: 'img/gr.png',\n    alt: 'hk',\n    delay: -91627\n  },\n  {\n    id: 24,\n    position: { x: 1340, y: 51 },\n    size: 0.8,\n    value: 'img/in.png',\n    alt: 'in',\n    delay: -63458\n  },\n  {\n    id: 25,\n    position: { x: 1340, y: 43 },\n    size: 0.8,\n    value: 'img/de.png',\n    alt: 'au',\n    delay: -7627\n  },\n  {\n    id: 26,\n    position: { x: 1340, y: 307 },\n    size: 0.8,\n    value: 'img/jp.png',\n    alt: 'jp',\n    delay: -42000\n  },\n  {\n    id: 27,\n    position: { x: 1340, y: 211 },\n    size: 0.8,\n    value: 'img/us.png',\n    alt: 'jp',\n    delay: -294407\n  },\n  {\n    id: 28,\n    position: { x: 1340, y: 15 },\n    size: 0.8,\n    value: 'img/br.png',\n    alt: 'br',\n    delay: -202373\n  },\n]\n\nfunction App() {\n  // const [selected, setSelected] = useState('')\n  // const [show, setShow] = useState(false)\n\n  // const handleClick = name => {\n  //   setSelected(name)\n  //   setShow(true)\n  // }\n\n  // const handleClose = () => {\n  //   setShow(false)\n  // }\n\n  return (\n    <div className='container-fluid pt-4 content-wrap'>\n\n      {/* <div className='alert-wrap'>\n        {show &&\n          <div className='alert alert-success' role='alert'>\n            {`You chose ${selected} flag`}\n            <button type='button' className='close' aria-label='Close' onClick={handleClose}><span aria-hidden='true'>&times;</span></button>\n          </div>\n        }\n      </div> */}\n\n      <div className='row home-flags'>\n        <div className='flags-container'>\n          <div className='flags-bg'>\n            <div className='slider-wrapper'>\n              {flags.map(flag => {\n                return (\n                  <img\n                    key={flag.id}\n                    className='img'\n                    src={flag.value}\n                    style={\n                      {\n                        top: flag.position.y,\n                        left: flag.position.x,\n                        width: flag.size * 150,\n                        height: flag.size * 150,\n                        animationDelay: `${flag.delay}ms`\n                      }\n                    }\n                    alt={flag.alt}\n                  // onClick={() => handleClick(flag.alt)}\n                  />\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}